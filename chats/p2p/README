// UTF-8.ru_RU, 0a

Многопользовательский чат типа точка-точка.

---- Словарь.
Клиент = собеседник.
Сервер = справочник адресов собеседников.
Справочник адресов собеседников = набор строк, содержащих название собеседника,
                                  IP-адрес, порт.

---- Организация.
--- Сервер.
Сервер выступает в роли не более, чем справочника адресов собеседников,
раздавая его всем подключившимся и поддерживая его актуальность у клиентов
при необходимости - подключении нового клиента, отключении клиента.
Отключение клиента будет определено позже.
Сервер использует два канала данных. Первый - для установления соединения с
клиентом и его регистрации в чате. Второй - для оповещение сервера о прекращении
или продолжении связи со стороны клиента и ожидания клиентами поправок к
справочнику.
Первый канал - TCP.
Второй канал - UDP.
Подтверждение о продолжении связи сервер ожидает от каждого клиента 1 раз в
ping_interval секунд. При отсутствии очередного подтверждения клиент считается
отключившимся.
Между запусками справочник хранится в БД SQLite 3.x
-- Структура записей в БД.
Таблица clients:
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    nickname CHAR(24),
    keyword CHAR(128),
    host TEXT,
    port INTEGER,
    UNIQUE(nickname)

--- Клиент.
Клиент при запуске подключается к серверу, представляется, запрашивает
справочник собеседников, сообщает о намерении продолжать беседу с кем-нибудь
и разрывает соединение. После этого, используется второй канал данных.
В том числе и для подтверждения того, что клиент все еще на связи.
Далее, клиент устанавливает TCP-соединение с другим клиентом. Представляется и
получает ответ об установке соединения.

Подключение клиента к серверу = установка TCP-соединение, представление.
Представление = сообщение серверу своих реквизитов (название в чате),
                получение кодового слова.
Разрыв соединения = прекращение TCP-соединения.
Отключение клиента от сервера = соответствующее оповещение сервера клиентом.

--- Подробности.
Ключевые слова:
    nickname - название клиента в чате - 24 знака (латиница, цифры, подчерк).
               Недостающие знаки заполняются байтами 00.
    keyword - кодовое слово, выделяемое сервером клиенту - 40 байтов.
    ip - адрес собеседника.
    port - порт собеседника.
    cl_cnt - кол-во собеседников.
    len - длина сообщения в байтах.
    (a)/k - повторение группы 'a' 'k' раз через пробел
            (в соответствии с контекстом).

Сообщения, управляющие и диалоговые, передаются пакетами.
Пакет состоит из заголовка и тела.
Заголовок:
Смещение (hex) - Длина (hex) - Значение
00             - 05          - Подпись = p2pmu
05             - 01          - код команды
06             - 02          - длина сообщения в байтах (len),
                               без учета заголовка

Допустимые команды:
Код команды (hex) - Команда
00                - CONNECT
01                - KEYWORD
02                - REFERENCE?
03                - REFERENCE
04                - CHANNEL_SWITCH
05                - REF_ADD
06                - REF_DEL
07                - QUIT
08                - PING
09                - ACCEPT
0a                - REJECT
0b                - MESSAGE

Что передается (направление = [к-с = клиент-сервер,
                с-к = сервер-клиент,
                к-к = клиент-клиент])

-- Первый канал:
Представление (к-с):
CONNECT nickname

Выдача кодового слова (с-к):
KEYWORD keyword

Запрос справочника (к-с):
REFERENCE?

Пересылка справочника (с-к):
REFERENCE cl_cnt (nickname ip port)/cl_cnt

Намерение продолжать беседу (смена канала с первого на второй) (к-с):
CHANNEL_SWITCH

Порядок сообщений: CONNECT - KEYWORD, REFERENCE?, REFERENCE, CHANNEL_SWITCH

-- Второй канал:
Добавленые строки в справочнике (с-к):
REF_ADD keyword nickname ip port

Убраные строки в справочнике (c-к):
REF_DEL keyword nickname

Отключение (к-с):
QUIT keyword nickname

Подтверждение наличия клиента на связи (к-с)
PING keyword nickname

-- Диалог клиентов
Установка соединения (к1-к2):
CONNECT nickname1

Подтверждение (к2-к1):
ACCEPT nickname1

Отказ (к2-к1):
REJECT nickname1

Отключение (к-к):
QUIT nickname

Сообщение (к-к):
MESSAGE message text of length len

Порядок сообщений: CONNECT - ACCEPT - MESSAGE - ... - QUIT
                   CONNECT - REJECT

Любые отклонения от порядка сообщений приводят к разрыву TCP-соединения.
